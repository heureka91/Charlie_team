{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Desktop\\\\tesztFolder-main\\\\src\\\\components\\\\UpdateUserForm.tsx\",\n  _s = $RefreshSig$();\n// src/UpdateUserForm.tsx\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { Box, Text, useToast, Spinner } from '@chakra-ui/react';\nimport * as Yup from 'yup';\nimport UpdateUserFormView from './UpdateUserFormView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  firstName: Yup.string().required('Kötelező mező'),\n  lastName: Yup.string().required('Kötelező mező')\n});\nconst UpdateUserForm = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const toast = useToast();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n      try {\n        const response = await fetch('http://localhost:5000/user', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setUser(data);\n        } else {\n          localStorage.removeItem('token');\n          navigate('/login');\n        }\n      } catch (err) {\n        setError('Hiba történt az adatok lekérése során.');\n        localStorage.removeItem('token');\n        navigate('/login');\n      }\n    };\n    fetchUserData();\n  }, [navigate]);\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    setError(null);\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/user', {\n        method: 'PUT',\n        // Ensure PUT method for updating user data\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(values)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUser(data);\n        toast({\n          title: 'Adatok sikeresen frissítve!',\n          status: 'success',\n          duration: 5000,\n          isClosable: true\n        });\n        navigate('/profile');\n      } else {\n        const errorData = await response.json();\n        switch (response.status) {\n          case 400:\n            throw new Error(errorData.message || 'A bevitt adatok érvénytelenek.');\n          case 401:\n            throw new Error(errorData.message || 'Hiányzó vagy érvénytelen token.');\n          default:\n            throw new Error(errorData.message || 'Ismeretlen hiba történt.');\n        }\n      }\n    } catch (err) {\n      if (err instanceof Error) {\n        if (err.message === 'Hiányzó vagy érvénytelen token.') {\n          localStorage.removeItem('token');\n          navigate('/login');\n        } else {\n          setError(err.message);\n          toast({\n            title: 'Hiba történt',\n            description: err.message,\n            status: 'error',\n            duration: 5000,\n            isClosable: true\n          });\n        }\n      } else {\n        setError('Ismeretlen hiba történt.');\n        toast({\n          title: 'Hiba történt',\n          description: 'Ismeretlen hiba történt.',\n          status: 'error',\n          duration: 5000,\n          isClosable: true\n        });\n      }\n    }\n    setSubmitting(false);\n  };\n  const handleCancel = () => {\n    navigate('/profile'); // Navigate to the profile page on cancel\n  };\n  return user ? /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstName: user.firstName,\n      lastName: user.lastName\n    },\n    enableReinitialize: true,\n    validationSchema: validationSchema,\n    onSubmit: handleSubmit,\n    children: formikProps => /*#__PURE__*/_jsxDEV(UpdateUserFormView, {\n      formik: formikProps,\n      error: error,\n      onCancel: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 35\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    children: error ? /*#__PURE__*/_jsxDEV(Text, {\n      color: \"red.500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {\n      size: \"xl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 13\n  }, this);\n};\n_s(UpdateUserForm, \"I0iCmqvGclDVh7sFUXLHROqsfMg=\", false, function () {\n  return [useNavigate, useToast];\n});\n_c = UpdateUserForm;\nexport default UpdateUserForm;\nvar _c;\n$RefreshReg$(_c, \"UpdateUserForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Formik","Box","Text","useToast","Spinner","Yup","UpdateUserFormView","jsxDEV","_jsxDEV","validationSchema","object","firstName","string","required","lastName","UpdateUserForm","_s","user","setUser","error","setError","navigate","toast","fetchUserData","token","localStorage","getItem","response","fetch","method","headers","ok","data","json","removeItem","err","handleSubmit","values","setSubmitting","body","JSON","stringify","title","status","duration","isClosable","errorData","Error","message","description","handleCancel","initialValues","enableReinitialize","onSubmit","children","formikProps","formik","onCancel","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","height","color","size","_c","$RefreshReg$"],"sources":["C:/Users/Márk/Desktop/tesztFolder-main/src/components/UpdateUserForm.tsx"],"sourcesContent":["// src/UpdateUserForm.tsx\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, FormikHelpers } from 'formik';\nimport { Box, Text, useToast, Spinner } from '@chakra-ui/react';\nimport * as Yup from 'yup';\nimport UpdateUserFormView from './UpdateUserFormView';\n\ninterface User {\n    email: string;\n    firstName: string;\n    lastName: string;\n}\n\ninterface FormValues {\n    firstName: string;\n    lastName: string;\n}\n\nconst validationSchema = Yup.object({\n    firstName: Yup.string().required('Kötelező mező'),\n    lastName: Yup.string().required('Kötelező mező'),\n});\n\nconst UpdateUserForm: React.FC = () => {\n    const [user, setUser] = useState<User | null>(null);\n    const [error, setError] = useState<string | null>(null);\n    const navigate = useNavigate();\n    const toast = useToast();\n\n    useEffect(() => {\n        const fetchUserData = async () => {\n            const token = localStorage.getItem('token');\n            if (!token) {\n                navigate('/login');\n                return;\n            }\n\n            try {\n                const response = await fetch('http://localhost:5000/user', {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                    },\n                });\n\n                if (response.ok) {\n                    const data: User = await response.json();\n                    setUser(data);\n                } else {\n                    localStorage.removeItem('token');\n                    navigate('/login');\n                }\n            } catch (err) {\n                setError('Hiba történt az adatok lekérése során.');\n                localStorage.removeItem('token');\n                navigate('/login');\n            }\n        };\n\n        fetchUserData();\n    }, [navigate]);\n\n    const handleSubmit = async (values: FormValues, { setSubmitting }: FormikHelpers<FormValues>) => {\n        setError(null);\n        const token = localStorage.getItem('token');\n        if (!token) {\n            navigate('/login');\n            return;\n        }\n\n        try {\n            const response = await fetch('http://localhost:5000/user', {\n                method: 'PUT', // Ensure PUT method for updating user data\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`,\n                },\n                body: JSON.stringify(values),\n            });\n\n            if (response.ok) {\n                const data: User = await response.json();\n                setUser(data);\n                toast({\n                    title: 'Adatok sikeresen frissítve!',\n                    status: 'success',\n                    duration: 5000,\n                    isClosable: true,\n                });\n                navigate('/profile');\n            } else {\n                const errorData = await response.json();\n                switch (response.status) {\n                    case 400:\n                        throw new Error(errorData.message || 'A bevitt adatok érvénytelenek.');\n                    case 401:\n                        throw new Error(errorData.message || 'Hiányzó vagy érvénytelen token.');\n                    default:\n                        throw new Error(errorData.message || 'Ismeretlen hiba történt.');\n                }\n            }\n        } catch (err) {\n            if (err instanceof Error) {\n                if (err.message === 'Hiányzó vagy érvénytelen token.') {\n                    localStorage.removeItem('token');\n                    navigate('/login');\n                } else {\n                    setError(err.message);\n                    toast({\n                        title: 'Hiba történt',\n                        description: err.message,\n                        status: 'error',\n                        duration: 5000,\n                        isClosable: true,\n                    });\n                }\n            } else {\n                setError('Ismeretlen hiba történt.');\n                toast({\n                    title: 'Hiba történt',\n                    description: 'Ismeretlen hiba történt.',\n                    status: 'error',\n                    duration: 5000,\n                    isClosable: true,\n                });\n            }\n        }\n        setSubmitting(false);\n    };\n\n    const handleCancel = () => {\n        navigate('/profile'); // Navigate to the profile page on cancel\n    };\n\n    return (\n        user ? (\n            <Formik\n                initialValues={{ firstName: user.firstName, lastName: user.lastName }}\n                enableReinitialize\n                validationSchema={validationSchema}\n                onSubmit={handleSubmit}\n            >\n                {(formikProps) => <UpdateUserFormView formik={formikProps} error={error} onCancel={handleCancel} />}\n            </Formik>\n        ) : (\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\n                {error ? (\n                    <Text color=\"red.500\">{error}</Text>\n                ) : (\n                    <Spinner size=\"xl\" />\n                )}\n            </Box>\n        )\n    );\n};\n\nexport default UpdateUserForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}